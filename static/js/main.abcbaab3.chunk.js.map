{"version":3,"sources":["../node_modules/@rafael.audy/habit-geek-utils/store/mock sync /^/.//.*/.json$","components/user/Profile.js","components/user/ProfileContainer.js","components/habits/SaveHabit.js","components/habits/HabitHeader.js","components/habits/HabitRowActions.js","components/habits/HabitCheckbox.js","components/habits/HabitRowFrequency.js","components/habits/HabitRows.js","components/habits/HabitTable.js","components/dashboard/DashboardWeekHeader.js","components/dashboard/DashboardView.js","components/dashboard/Dashboard.js","components/dashboard/DashboardContainer.js","components/layout/Header.js","components/layout/Layout.js","components/history/History.js","components/history/HistoryContainer.js","components/App.js","components/AppContainer.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","avatars","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","Profile","initialName","name","avatar","registerUser","useState","setName","selectedAvatar","setAvatar","validityChecked","setValidityChecked","t","useTranslation","className","onSubmit","event","preventDefault","target","checkValidity","navigate","noValidate","htmlFor","value","onChange","required","index","key","onClick","src","alt","type","mapDispatchToProps","connect","user","SaveHabit","defaultName","defaultType","frequency","defaultFrequency","saveHabit","deleteHabit","onGoBack","setType","setFrequency","typeOptions","returnObjects","onBlur","label","HabitHeader","isReadOnly","week","cellComponents","day","todayClass","isToday","HabitRowActions","onUpdateHabit","getCurrentWeek","icon","faEdit","HabitCheckbox","isChecked","clickHandler","isDisabled","checked","disabled","data-readonly","HabitRowFrequency","habitSucceded","habitFailed","toggleDayHabit","todayIndex","getTodayIndex","currentWeek","isCurrentWeek","succededClass","failedClass","Array","checkIndex","HabitRows","habits","containerIndex","HabitTable","length","DashboardWeekHeader","hasPreviousWeek","toggleWeek","getButton","direction","faChevronCircleLeft","getWeekIntervalText","faChevronCircleRight","DashboardView","username","currentHabits","previousHabits","previousWeek","onAddNewHabit","setIsCurrentWeek","tUsername","Dashboard","isEditingHabit","setIsEditingHabit","isEditing","filter","mapHabits","sort","currentMappedHabits","weeks","previousMappedHabits","Header","props","getLinkClass","isCurrent","to","getProps","Layout","children","History","openedList","setOpened","toggleOpened","aria-expanded","aria-controls","aria-labelledby","weekNumber","getHabit","mappedWeeks","weekKey","habitsKeys","habitKey","reverse","shift","App","startNewWeek","path","default","DashboardContainer","ProfileContainer","HistoryContainer","ReactDOM","render","store","loading","persistor","AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.abcbaab3.chunk.js","sourcesContent":["var map = {\n\t\"./1FullWeek.json\": 56,\n\t\"./3FullWeeks.json\": 57,\n\t\"./PartialWeeks.json\": 58\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 55;","//\n\nimport React, { useState } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { useTranslation } from \"react-i18next\";\n\nimport \"./Profile.scss\";\nimport avatar1 from \"@rafael.audy/habit-geek-utils/imgs/avatars/001-burglar.svg\";\nimport avatar2 from \"@rafael.audy/habit-geek-utils/imgs/avatars/002-woman.svg\";\nimport avatar3 from \"@rafael.audy/habit-geek-utils/imgs/avatars/003-superhero.svg\";\nimport avatar4 from \"@rafael.audy/habit-geek-utils/imgs/avatars/004-robot.svg\";\nimport avatar5 from \"@rafael.audy/habit-geek-utils/imgs/avatars/005-dragon.svg\";\nimport avatar6 from \"@rafael.audy/habit-geek-utils/imgs/avatars/006-cyborg.svg\";\n\nconst avatars = [avatar1, avatar2, avatar3, avatar4, avatar5, avatar6];\n\nconst Profile = ({ name: initialName, avatar, registerUser }) => {\n  const [name, setName] = useState(initialName);\n  const [selectedAvatar, setAvatar] = useState(avatar ? avatar : avatar1);\n  const [validityChecked, setValidityChecked] = useState(false);\n  const { t } = useTranslation();\n\n  const register = event => {\n    event.preventDefault();\n    setValidityChecked(true);\n\n    if (event.target.checkValidity()) {\n      registerUser(name, selectedAvatar);\n      navigate(\"/habits\");\n    }\n  };\n\n  return (\n    <form\n      className={`mobile-size-container ${\n        validityChecked ? \"was-validated\" : \"\"\n      }`}\n      onSubmit={register}\n      noValidate\n    >\n      <h2>{t(\"profile-title\")}</h2>\n      <div className=\"mb-3\">\n        <label htmlFor=\"profile-name\">{t(\"profile-name\")}</label>\n        <input\n          id=\"profile-name\"\n          className=\"form-control\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          required\n        ></input>\n        <div className=\"invalid-feedback\">{t(\"profile-name-validation\")}</div>\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"profile-avatar\">{t(\"profile-avatar\")}</label>\n        <div className=\"input-group profile__avatar-container\">\n          {avatars.map((avatar, index) => (\n            // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events\n            <img\n              key={`avatar-${index}`}\n              onClick={() => setAvatar(avatar)}\n              src={avatar}\n              alt={t(\"profile-avatar-alt-desc\")}\n              className={`profile__avatar ${\n                avatar === selectedAvatar ? \"profile__avatar--selected\" : \"\"\n              }`}\n            ></img>\n          ))}\n        </div>\n      </div>\n      <hr className=\"mb-4\" />\n      <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">\n        {t(\"profile-save\")}\n      </button>\n    </form>\n  );\n};\n\nexport default Profile;\n","import { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { registerUser } from \"@rafael.audy/habit-geek-utils/actions/userActions\";\n\nconst mapStateToProps = ({ user }) => ({\n  name: user.name,\n  avatar: user.avatar\n});\n\nconst mapDispatchToProps = {\n  registerUser\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Profile);\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst SaveHabit = ({\n  id,\n  name: defaultName = \"\",\n  type: defaultType = \"\",\n  frequency: defaultFrequency = \"\",\n  saveHabit,\n  deleteHabit,\n  onGoBack\n}) => {\n  const [name, setName] = useState(defaultName);\n  const [type, setType] = useState(defaultType);\n  const [frequency, setFrequency] = useState(defaultFrequency);\n  const [validityChecked, setValidityChecked] = useState(false);\n  const { t } = useTranslation();\n\n  const saveAndClose = event => {\n    event.preventDefault();\n    setValidityChecked(true);\n\n    if (event.target.checkValidity()) {\n      saveHabit(id, name, type, frequency);\n      onGoBack();\n    }\n  };\n\n  const deleteHabitAndClose = () => {\n    deleteHabit(id);\n    onGoBack();\n  };\n\n  const typeOptions = t(\"save-habit-type-options\", {\n    returnObjects: true\n  });\n\n  return (\n    <form\n      onSubmit={saveAndClose}\n      className={`mobile-size-container ${\n        validityChecked ? \"was-validated\" : \"\"\n      }`}\n      noValidate\n    >\n      <h2>{t(\"save-habit-title\")}</h2>\n      <div className=\"mb-3\">\n        <label htmlFor=\"new-habit-name\">{t(\"save-habit-name\")}</label>\n        <input\n          id=\"new-habit-name\"\n          className=\"form-control\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          required\n        ></input>\n        <div className=\"invalid-feedback\">\n          {t(\"save-habit-name-validation\")}\n        </div>\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"new-habit-type\">{t(\"save-habit-type\")}</label>\n        <select\n          id=\"new-habit-type\"\n          className=\"form-control\"\n          value={type}\n          onChange={e => setType(e.target.value)}\n          onBlur={e => setType(e.target.value)}\n          required\n        >\n          <option value=\"\"></option>\n          {typeOptions.map(({ key, label }) => (\n            <option key={`save-habit-type-option-${key}`} value={label}>\n              {label}\n            </option>\n          ))}\n        </select>\n        <div className=\"invalid-feedback\">\n          {t(\"save-habit-type-validation\")}\n        </div>\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"new-habit-frequency\">{t(\"save-habit-frequency\")}</label>\n        <select\n          id=\"new-habit-frequency\"\n          className=\"form-control\"\n          value={frequency}\n          onChange={e => setFrequency(e.target.value)}\n          onBlur={e => setFrequency(e.target.value)}\n          required\n        >\n          <option value=\"\"></option>\n          <option value=\"1\">1x</option>\n          <option value=\"2\">2x</option>\n          <option value=\"3\">3x</option>\n          <option value=\"4\">4x</option>\n          <option value=\"5\">5x</option>\n          <option value=\"6\">6x</option>\n          <option value=\"7\">7x</option>\n        </select>\n        <div className=\"invalid-feedback\">\n          {t(\"save-habit-frequency-validation\")}\n        </div>\n      </div>\n      <hr className=\"mb-4\" />\n      <button className=\"btn btn-primary btn-lg btn-block\">\n        {t(\"save-habit-save\")}\n      </button>\n      {id ? (\n        <button\n          type=\"button\"\n          className=\"btn btn-danger btn-lg btn-block\"\n          onClick={deleteHabitAndClose}\n        >\n          {t(\"save-habit-delete\")}\n        </button>\n      ) : null}\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary btn-lg btn-block\"\n        onClick={onGoBack}\n      >\n        {t(\"save-habit-cancel\")}\n      </button>\n    </form>\n  );\n};\n\nexport default SaveHabit;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { isToday } from \"@rafael.audy/habit-geek-utils/utils/dateUtils\";\n\nconst HabitHeader = ({ isReadOnly, week }) => {\n  const { t } = useTranslation();\n  const days = t(\"date-days-short\", { returnObjects: true });\n\n  const cellComponents = days.map((day, index) => {\n    const todayClass = isToday(week, index)\n      ? \"habit-row-frequency__cell--today-header\"\n      : \"\";\n    return (\n      <h5\n        key={`header-cell-${index}`}\n        className={`rounded-top habit-row-frequency__cell ${todayClass}`}\n      >\n        {day}\n      </h5>\n    );\n  });\n\n  return (\n    <div className=\"habit-row__header\">\n      <div className=\"habit-row__title\"></div>\n      <div className=\"habit-row-frequency\">{cellComponents}</div>\n      {isReadOnly ? null : <div className=\"icon-button\"></div>}\n    </div>\n  );\n};\n\nexport default HabitHeader;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { getCurrentWeek } from \"@rafael.audy/habit-geek-utils/utils/dateUtils\";\n\nconst HabitRowActions = ({ week, name, onUpdateHabit }) => {\n  if (week === getCurrentWeek()) {\n    return (\n      <button\n        className=\"icon-button icon-button__edit btn btn-link\"\n        onClick={() => onUpdateHabit(name)}\n      >\n        <FontAwesomeIcon icon={faEdit} />\n      </button>\n    );\n  }\n\n  return <div className=\"icon-button\"></div>;\n};\n\nexport default HabitRowActions;\n","import React, { Fragment } from \"react\";\n\nimport \"./HabitCheckbox.scss\";\n\nconst HabitCheckbox = ({ isChecked, clickHandler, isDisabled, isReadOnly }) => {\n  return (\n    <Fragment>\n      <label className=\"toggle\">\n        <input\n          className=\"toggle__input\"\n          onChange={clickHandler}\n          type=\"checkbox\"\n          checked={isChecked}\n          disabled={isReadOnly ? false : isDisabled}\n          data-readonly={isReadOnly}\n        />\n        <span className=\"toggle__label\" data-readonly={isReadOnly}>\n          <span className=\"toggle__text\"></span>\n        </span>\n      </label>\n    </Fragment>\n  );\n};\n\nexport default HabitCheckbox;\n","import React from \"react\";\nimport {\n  getTodayIndex,\n  getCurrentWeek,\n  isToday\n} from \"@rafael.audy/habit-geek-utils/utils/dateUtils\";\n\nimport HabitCheckbox from \"./HabitCheckbox\";\nimport \"./HabitRowFrequency.scss\";\n\nconst HabitRowFrequency = ({\n  week,\n  name,\n  checked,\n  habitSucceded,\n  habitFailed,\n  isReadOnly,\n  toggleDayHabit\n}) => {\n  const todayIndex = getTodayIndex();\n  const currentWeek = getCurrentWeek();\n  const isCurrentWeek = week === currentWeek;\n  const succededClass = habitSucceded ? \"table-success\" : \"\";\n  const failedClass = habitFailed ? \"table-danger\" : \"\";\n\n  return (\n    <div className={`habit-row-frequency ${succededClass} ${failedClass}`}>\n      {[...Array(7).keys()].map(checkIndex => {\n        const todayClass = isToday(week, checkIndex)\n          ? \"habit-row-frequency__cell--today\"\n          : \"\";\n        const isTodayOrBefore = todayIndex < checkIndex;\n        const isDisabled = isCurrentWeek ? isTodayOrBefore : false;\n\n        return (\n          <div\n            className={`habit-row-frequency__cell ${todayClass}`}\n            key={`check-${name}-${checkIndex}`}\n          >\n            <HabitCheckbox\n              clickHandler={() => toggleDayHabit(week, name, checkIndex)}\n              isChecked={checked[checkIndex]}\n              isDisabled={isDisabled}\n              isReadOnly={isReadOnly}\n            ></HabitCheckbox>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default HabitRowFrequency;\n","import React from \"react\";\n\nimport HabitRowActions from \"./HabitRowActions\";\nimport HabitRowFrequency from \"./HabitRowFrequency\";\nimport \"./HabitRows.scss\";\n\nconst HabitRows = ({\n  week,\n  habits,\n  isReadOnly,\n  toggleDayHabit,\n  onUpdateHabit\n}) =>\n  habits.map(\n    (\n      { name, frequency, checked, habitSucceded, habitFailed },\n      containerIndex\n    ) => {\n      return (\n        <div key={`check-container-${containerIndex}`} className=\"habit-row\">\n          <div className=\"habit-row__title\">\n            <span>\n              ({frequency}x) - {name}\n            </span>\n          </div>\n\n          <HabitRowFrequency\n            week={week}\n            name={name}\n            checked={checked}\n            habitSucceded={habitSucceded}\n            habitFailed={habitFailed}\n            isReadOnly={isReadOnly}\n            toggleDayHabit={toggleDayHabit}\n          ></HabitRowFrequency>\n\n          {isReadOnly ? null : (\n            <HabitRowActions\n              week={week}\n              name={name}\n              onUpdateHabit={onUpdateHabit}\n            ></HabitRowActions>\n          )}\n        </div>\n      );\n    }\n  );\n\nexport default HabitRows;\n","import React from \"react\";\n\nimport HabitHeader from \"./HabitHeader\";\nimport HabitRows from \"./HabitRows\";\n\nconst HabitTable = ({\n  week,\n  habits,\n  isReadOnly,\n  onUpdateHabit,\n  toggleDayHabit\n}) =>\n  habits.length > 0 ? (\n    <div className=\"mb-3\">\n      <HabitHeader isReadOnly={isReadOnly} week={week}></HabitHeader>\n      <HabitRows\n        habits={habits}\n        week={week}\n        isReadOnly={isReadOnly}\n        toggleDayHabit={toggleDayHabit}\n        onUpdateHabit={onUpdateHabit}\n      ></HabitRows>\n    </div>\n  ) : null;\n\nexport default HabitTable;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleLeft,\n  faChevronCircleRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { getWeekIntervalText } from \"@rafael.audy/habit-geek-utils/utils/dateUtils\";\n\nconst DashboardWeekHeader = ({\n  week,\n  isCurrentWeek,\n  hasPreviousWeek,\n  toggleWeek\n}) => {\n  const clickHandler = () => toggleWeek(!isCurrentWeek);\n  const getButton = (direction, icon, isDisabled) => (\n    <button\n      className={`icon-button icon-button-${direction} btn btn-link ${\n        isDisabled ? \"disabled\" : \"\"\n      }`}\n      onClick={clickHandler}\n    >\n      <FontAwesomeIcon icon={icon} />\n    </button>\n  );\n\n  return (\n    <div className=\"mb-3 d-flex justify-content-center align-items-baseline\">\n      {hasPreviousWeek\n        ? getButton(\"previous\", faChevronCircleLeft, !isCurrentWeek)\n        : null}\n      <h5 className=\"dashboard-week-header\">{getWeekIntervalText(week)}</h5>\n      {hasPreviousWeek\n        ? getButton(\"forward\", faChevronCircleRight, isCurrentWeek)\n        : null}\n    </div>\n  );\n};\n\nexport default DashboardWeekHeader;\n","import React, { useState, Fragment } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport HabitTable from \"../habits/HabitTable\";\nimport DashboardWeekHeader from \"./DashboardWeekHeader\";\n\nconst DashboardView = ({\n  username,\n  currentHabits,\n  previousHabits,\n  currentWeek,\n  previousWeek,\n  onAddNewHabit,\n  onUpdateHabit,\n  toggleDayHabit\n}) => {\n  const [isCurrentWeek, setIsCurrentWeek] = useState(true);\n  const { t } = useTranslation();\n\n  let tUsername = username ? \" \" + username : username;\n\n  return (\n    <div className=\"large-size-container\">\n      <h2 className=\"mb-3\">{t(\"my-habits-title\", { username: tUsername })}</h2>\n\n      <DashboardWeekHeader\n        week={isCurrentWeek ? currentWeek : previousWeek}\n        isCurrentWeek={isCurrentWeek}\n        hasPreviousWeek={previousWeek}\n        toggleWeek={setIsCurrentWeek}\n      ></DashboardWeekHeader>\n\n      <HabitTable\n        habits={isCurrentWeek ? currentHabits : previousHabits}\n        week={isCurrentWeek ? currentWeek : previousWeek}\n        toggleDayHabit={toggleDayHabit}\n        onUpdateHabit={onUpdateHabit}\n      ></HabitTable>\n\n      {isCurrentWeek ? (\n        <Fragment>\n          <hr />\n          <div className=\"d-flex justify-content-center\">\n            <button className=\"btn btn-primary btn-lg\" onClick={onAddNewHabit}>\n              {t(\"my-habits-new-habit\")}\n            </button>\n          </div>\n        </Fragment>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DashboardView;\n","import React, { useState } from \"react\";\n\nimport SaveHabit from \"../habits/SaveHabit\";\nimport DashboardView from \"./DashboardView\";\n\nconst Dashboard = ({\n  username,\n  currentHabits,\n  previousHabits,\n  currentWeek,\n  previousWeek,\n  saveHabit,\n  deleteHabit,\n  toggleDayHabit\n}) => {\n  const [isEditingHabit, setIsEditingHabit] = useState({});\n\n  if (isEditingHabit.isEditing) {\n    const { name, frequency, type } = isEditingHabit.id\n      ? currentHabits.filter(({ name }) => name === isEditingHabit.id)[0]\n      : {};\n\n    return (\n      <SaveHabit\n        id={isEditingHabit.id}\n        name={name}\n        frequency={frequency}\n        type={type}\n        saveHabit={saveHabit}\n        deleteHabit={deleteHabit}\n        onGoBack={() => setIsEditingHabit({})}\n      />\n    );\n  }\n\n  return (\n    <DashboardView\n      username={username}\n      currentHabits={currentHabits}\n      previousHabits={previousHabits}\n      currentWeek={currentWeek}\n      previousWeek={previousWeek}\n      onAddNewHabit={() => setIsEditingHabit({ isEditing: true })}\n      onUpdateHabit={id => setIsEditingHabit({ isEditing: true, id })}\n      toggleDayHabit={toggleDayHabit}\n    />\n  );\n};\n\nexport default Dashboard;\n","import { connect } from \"react-redux\";\nimport Dashboard from \"./Dashboard\";\nimport {\n  saveHabit,\n  toggleDayHabit,\n  deleteHabit\n} from \"@rafael.audy/habit-geek-utils/actions/habitActions\";\n\nconst mapHabits = habits =>\n  habits\n    ? Object.keys(habits)\n        .sort()\n        .map(key => {\n          return {\n            name: key,\n            ...habits[key]\n          };\n        })\n    : [];\n\nconst mapStateToProps = ({ habits, user }) => {\n  const { currentWeek, previousWeek } = habits;\n  const currentMappedHabits = mapHabits(habits.weeks[habits.currentWeek]);\n  const previousMappedHabits = mapHabits(habits.weeks[habits.previousWeek]);\n\n  return {\n    username: user.name,\n    currentHabits: currentMappedHabits,\n    previousHabits: previousMappedHabits,\n    currentWeek,\n    previousWeek: previousMappedHabits.length && previousWeek\n  };\n};\n\nconst mapDispatchToProps = {\n  saveHabit,\n  deleteHabit,\n  toggleDayHabit\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { useTranslation } from \"react-i18next\";\n\nimport \"./Header.scss\";\n\nfunction Header(props) {\n  const { t } = useTranslation();\n\n  const getLinkClass = ({ isCurrent }) => {\n    return {\n      className: isCurrent ? \"nav-item nav-link active\" : \"nav-item nav-link\"\n    };\n  };\n\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark header\">\n        <Link className=\"navbar-brand\" to=\"/habit-geek/habits\">\n          Habit Geek!\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link getProps={getLinkClass} to=\"/habit-geek/habits\">\n            {t(\"nav-my-habits\")}\n          </Link>\n          <Link getProps={getLinkClass} to=\"/habit-geek/history\">\n            {t(\"nav-history\")}\n          </Link>\n          <Link getProps={getLinkClass} to=\"/habit-geek/profile\">\n            {t(\"nav-profile\")}\n          </Link>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { Fragment } from \"react\";\nimport Header from \"./Header\";\n\nfunction Layout({ children }) {\n  return (\n    <Fragment>\n      <Header />\n      {children}\n    </Fragment>\n  );\n}\n\nexport default Layout;\n","import React, { Fragment, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport HabitTable from \"../habits/HabitTable\";\nimport \"./History.scss\";\nimport { getWeekIntervalText } from \"@rafael.audy/habit-geek-utils/utils/dateUtils\";\n\nconst History = ({ weeks }) => {\n  const [openedList, setOpened] = useState({\n    [weeks[0] ? weeks[0].week : \"empty\"]: true\n  });\n  const { t } = useTranslation();\n\n  const toggleOpened = week => {\n    setOpened({ ...openedList, [week]: openedList[week] ? false : true });\n  };\n\n  const getHabit = (habits, weekNumber) => (\n    <HabitTable\n      key={`history-habit-table-${weekNumber}`}\n      habits={habits}\n      isReadOnly={true}\n      toggleDayHabit={() => {}}\n    ></HabitTable>\n  );\n\n  const getWeeks = () => {\n    return weeks.map(({ week, habits }) => {\n      return (\n        <div className=\"card\" key={`history-habit-${week}`}>\n          <div\n            className=\"card-header history__header\"\n            id={`history-habit-header-${week}`}\n          >\n            <button\n              className=\"btn btn-secondary history__header-button\"\n              aria-expanded={openedList[week] ? \"True\" : \"False\"}\n              aria-controls={`history-habit-content-${week}`}\n              onClick={() => toggleOpened(week)}\n            >\n              {getWeekIntervalText(week)}\n            </button>\n          </div>\n\n          <div\n            id={`history-habit-content-${week}`}\n            className={`collapse ${openedList[week] ? \"show\" : \"\"}`}\n            aria-labelledby={`history-habit-header-${week}`}\n          >\n            <div className=\"card-body\">{getHabit(habits, week)}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"history large-size-container\">\n      {weeks.length === 0 ? (\n        <h2 className=\"mb-3 history__empty-data\">\n          {t(\"history-title-empty-data\")}\n        </h2>\n      ) : (\n        <Fragment>\n          <h2 className=\"mb-3\">{t(\"history-title\")}</h2>\n          <div id=\"history-accordion\">{getWeeks()}</div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","import { connect } from \"react-redux\";\nimport History from \"./History\";\n\nconst mapStateToProps = ({ habits }) => {\n  let mappedWeeks = Object.keys(habits.weeks)\n    .sort()\n    .map(weekKey => {\n      const habitsKeys = Object.keys(habits.weeks[weekKey]);\n\n      if (habitsKeys.length === 0) return false;\n\n      return {\n        week: weekKey,\n        habits: habitsKeys.map(habitKey => {\n          return habits.weeks[weekKey][habitKey];\n        })\n      };\n    })\n    .filter(week => week)\n    .reverse();\n\n  mappedWeeks.shift();\n\n  return {\n    weeks: mappedWeeks\n  };\n};\n\nexport default connect(mapStateToProps)(History);\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport { getCurrentWeek } from \"@rafael.audy/habit-geek-utils/utils/dateUtils\";\n\nimport ProfileContainer from \"./user/ProfileContainer\";\nimport DashboardContainer from \"./dashboard/DashboardContainer\";\nimport Layout from \"./layout/Layout\";\nimport HistoryContainer from \"./history/HistoryContainer\";\n\nimport \"./App.scss\";\n\nfunction App({ currentWeek, startNewWeek }) {\n  if (currentWeek !== getCurrentWeek()) {\n    startNewWeek();\n  }\n\n  return (\n    <div>\n      <Router>\n        <Layout path=\"/habit-geek\" default>\n          <DashboardContainer\n            path=\"/habit-geek/habits\"\n            default\n          ></DashboardContainer>\n          <ProfileContainer path=\"/habit-geek/profile\"></ProfileContainer>\n          <HistoryContainer path=\"/habit-geek/history\"></HistoryContainer>\n        </Layout>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\n\nimport { startNewWeek } from \"@rafael.audy/habit-geek-utils/actions/habitActions\";\n\nimport \"./App.scss\";\nimport App from \"./App\";\n\nconst mapStateToProps = ({ habits }) => ({\n  currentWeek: habits.currentWeek\n});\n\nconst mapDispatchToProps = {\n  startNewWeek\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport { store, persistor } from \"@rafael.audy/habit-geek-utils/store\";\nimport \"@rafael.audy/habit-geek-utils/i18next/i18n\";\n\nimport AppContainer from \"./components/AppContainer\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <AppContainer />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}